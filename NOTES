## 1 Fetching Data with useEffect()

- "AvailableMeals.js"
  => Fetching data with useEffect() => So it gets data automatically after page load
  => Set fetched data with useState() => Then pass the data to JSX

\***\* useEffect() cannot return a promise \*\***
instead we create another function inside the useEffect() function with async/await

/////////////////////////////////////////////////////////////////////////////////////////////////////

## 2 Handling the Loading State

- "AvailableMeals.js"
  => useState(true/false) => To toggle loading message

/////////////////////////////////////////////////////////////////////////////////////////////////////

## 3 Handling Errors

- "AvailableMeals.js"
  => using (try/catch to handle error, useState() for err.message )

--------------------------------------------- RESPONSE.ok
Returns (true/false)

/////////////////////////////////////////////////////////////////////////////////////////////////////

## 4 Adding Checkout Form

- "Checkout.js"
  => checkout form
  => added cancel/confirm buttons

- "Cart.js"
  => Added checkout form (useState(true/false) to show form on button click)

/////////////////////////////////////////////////////////////////////////////////////////////////////

## 5 Handling the Confirm Button (validating Form)

- "Checkout.js"
  => using useRef() to valdiate form address
  => using useState() to store and validate 4 ref states
  => Manipulating JSX with useState() validations

/////////////////////////////////////////////////////////////////////////////////////////////////////

## 6 Submitting & Sending Cart Data

- "Cart.js"
  => Created "submitOrderHandler()" to fetch "POST" data
  => Function was passed to <Checkout> as JSX props

- "Checkout.js:
  => Called "submitOrderHandler()" to pass submitted data into the function
